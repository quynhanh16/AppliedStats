## unpack the data by status
Perished=Bumpus$Humerus[Bumpus$Status=="Perished"]
Survived=Bumpus$Humerus[Bumpus$Status=="Survived"]
## draw side by side histogram
par(mfrow=c(1,2))# subplots of 2 rows by 1 column
#one hist atop the other one
hist(Perished,main="Perished",col='blue',prob=T) ## draw histogram for blue states HERE
hist(Survived,main="Survived",col='red',prob=T) ## draw histogram for blue states HERE
hist(Survived,main="Survived",col='red',xlim = c(640,800),prob=T) ## draw histogram  HERE
#one hist atop the other one
hist(Perished,main="Perished",col='blue',xlim = c(640,800),prob=T) ## draw histogram HERE
## unpack the data by status
Perished=Bumpus$Humerus[Bumpus$Status=="Perished"]
Survived=Bumpus$Humerus[Bumpus$Status=="Survived"]
## draw side by side histogram
par(mfrow=c(1,2))# subplots of 2 rows by 1 column
#one hist atop the other one
hist(Perished,main="Perished",col='blue',xlim = c(640,800),prob=T) ## draw histogram HERE
hist(Survived,main="Survived",col='red',xlim = c(640,800),prob=T) ## draw histogram  HERE
summary(Survived)
summary(Perished)
summary(Survived)
q()
pwd()
wd()
getwd()
getwd()
library("Sleuth2")
data=ex0333
View(data)
View(data)
data2=ex0321
View(data2)
View(data2)
q()
x=c(5.79, 1579.52, 2323.70)
y=c(68.8, 108.29, 110.29, 426.07, 1067.60)
xLog=log(x)
yLog=log(y)
mean(xLog)
mean(yLog)
sd(xLog)
sd(yLog)
mean(xLog)-mean(yLog)
exp(mean(xLog)-mean(yLog))
var(xLog)
q()
in_state=c(1000, 4000, 5000,8000,40000)
mean(in_state)
log(in_state)
in_state_loglog(in_state)
in_state_log=log(in_state)
mean(in_state_log)
log(11600)
log(5000)
q()
x1=c(5.79, 1579.52, 2323,70)
x1=c(5.79, 1579.52, 2323.70)
x2=c(68.8, 108.29, 110.29, 426.07, 1067.60)
y1=log(x1)
y2=log(x2)
y1
y2
mean(y1)
mean(y2)
mean(y1)-mean(y2)
exp(mean(y1)-mean(y2))
var(y1)
var(y2)
y1
y2
0.295+4.303*sqrt(11.257/3+1.31/5)
exp(-8.326)
exp(8.9)
(8.5-11/2)/sqrt(11/4)
q()
setwd("C:/Users/nguyenap/OneDrive - University of Indianapolis/Desktop/UIndy/Teaching/Math 510/RCode/03_Alternative Tests")
getwd()
library(Sleuth2)
Bumpus=case0201
summary(Bumpus)
View(Bumpus)
View(Bumpus)
wilcox.test(Humerous~ Status,data=Bumpus)
wilcox.test(Humerus~ Status,data=Bumpus)
wilcox.test(Bumpus$Humerus~ Bumpus$Status)
wilcox.test(Bumpus$Humerus~ Bumpus$Status, correct=FALSE)
wilcox.test(Bumpus$Humerus~ Bumpus$Status)
wilcox.test(Bumpus$Humerus~ Bumpus$Status, exact=TRUE)
wilcox.test(Bumpus$Humerus~ Bumpus$Status, exact=FALSE)
wilcox.test(Bumpus$Humerus~ Bumpus$Status, conf.int= TRUE, exact=FALSE)
wilcox.test(Bumpus$Humerus~ Bumpus$Status, conf.int= TRUE)
wilcox.test(Bumpus$Humerus~ Bumpus$Status, conf.int= TRUE, exact = FALSE)
wilcox.test(Bumpus$Humerus~ Bumpus$Status, conf.int= TRUE)
wilcox.test(Bumpus$Humerus~ Bumpus$Status, conf.int= TRUE, exact=FALSE)
Darwimdata=read.csv("DarwinData.csv")
Darwindata=read.csv("DarwinData.csv")
View(Darwindata)
View(Darwindata)
Darwindata=read.csv("DarwinData.csv")
wilcox.test(Darwindata$Cross, Darwindata$SELF, paired=TRUE, conf.int=TRUE)
Darwindata=read.csv("DarwinData.csv")
wilcox.test(Darwindata$CROSS, Darwindata$SELF, paired=TRUE, conf.int=TRUE)
Darwindata=read.csv("DarwinData.csv")
wilcox.test(Darwindata$CROSS, Darwindata$SELF, paired=T, conf.int=TRUE)
Darwindata=read.csv("DarwinData.csv")
wilcox.test(Darwindata$CROSS, Darwindata$SELF, paired=T, conf.int=T)
wilcox.test(Bumpus$Humerus~ Bumpus$Status, conf.int= TRUE, exact=F)
FBdata=read.csv("FacebookData.csv")
View(FBdata)
View(FBdata)
N=3000
FBdata=read.csv("FacebookData.csv")
for (i in 1:N){
y=sample(FBData$Time, size=21, replace = FALSE)
mean_y[i]=mean(y)
}
N=3000
FBdata=read.csv("FacebookData.csv")
for (i in 1:N){
y=sample(FBdata$Time, size=21, replace = FALSE)
mean_y[i]=mean(y)
}
N=3000
FBdata=read.csv("FacebookData.csv")
mean_y=as.numeric(N)
for (i in 1:N){
y=sample(FBdata$Time, size=21, replace = FALSE)
mean_y[i]=mean(y)
}
hist(mean_y)
N=3000
FBdata=read.csv("FacebookData.csv")
mean_y=as.numeric(N)
for (i in 1:N){
y=sample(FBdata$Time, size=21, replace = TRUE)
mean_y[i]=mean(y)
}
hist(mean_y)
qqnorm(mean_y, pch = 19, frame = FALSE)
qqline(mean_y, col = "red", lwd = 3)
results = boot(FBdata$Time, statistic=mean, R=3000)
library(boot)
results = boot(FBdata$Time, statistic=mean, R=3000)
boot_sleep = do(3000)*mean(~ Time, data = resample(FBData, 21)
boot_sleep = do(3000)*mean(~ Time, data = resample(FBData, 21))
library(mosaic)
install.packages("mosaic")
library(mosaic)
boot_sleep = do(3000)*mean(~ Time, data = resample(FBData, 21))
library(mosaic)
boot_sleep = do(3000)*mean(~ Time, data = resample(FBdata, 21))
library(mosaic)
boot_fb = do(3000)*mean(~ Time, data = resample(FBdata, 21))
hist(boot_fb)
View(boot_fb)
hist(boot_fb$mean)
qqnorm(boot_fb$mean, pch = 19, frame = FALSE)
qqline(boot_fb$mean, col = "red", lwd = 3)
library(mosaic)
set.seed(2018)
boot_fb = do(3000)*mean(~ Time, data = resample(FBdata, 21))
hist(boot_fb$mean)
qqnorm(boot_fb$mean, pch = 19, frame = FALSE)
qqline(boot_fb$mean, col = "red", lwd = 3)
confint(boot_fb, method=c("se", "perc", "BC", "BCa"))
confint(boot_fb$mean, method=c("se", "perc", "BC", "BCa"))
confint(boot_fb, method=c("se", "perc"))
library(boot)
set.seed(2018)
boot_fb = do(3000)*mean(~ Time, data = resample(FBdata, 21))
meanValues = function(data,indices){
resampled_data = data[indices,]
mean(resampled_data)
}
library(boot)
set.seed(2018)
boot_fb = boot(FBdata$Time, meanValues, N=3000)
library(boot)
set.seed(2018)
boot_fb = boot(FBdata$Time, meanValues, R=3000)
meanValues = function(data,indices){
resampled_data = data[indices]
mean(resampled_data)
}
library(boot)
set.seed(2018)
boot_fb = boot(FBdata$Time, meanValues, R=3000)
View(boot_fb)
View(boot_fb)
hist(boot_fb$t)
qqnorm(boot_fb$t, pch = 19, frame = FALSE)
qqline(boot_fb$t, col = "red", lwd = 3)
boot.ci(boot_fb,conf=0.95, type="all")
boot.ci(boot_fb,conf=0.95, var.t = t, type="all")
boot.ci(boot_fb,conf=0.95, var.t = boot_fb$t, type="all")
boot.ci(boot_fb,conf=0.95, type="stud")
boot.ci(boot_fb,conf=0.95, type="BCa")
boot.ci(boot_fb,conf=0.95, type="all")
boot.ci(boot_fb,conf=0.95, type="bca")
boot.ci(boot_fb,conf=0.95, type="perc")
boot.ci(boot_fb,conf=0.95, type="bca")
confint(boot_fb, method=c("se", "perc"))
confint(boot_fb$t, method=c("se", "perc"))
library(boot)
set.seed(2018)
boot_fb = boot(FBdata$Time, statistics=meanValues, R=3000)
library(boot)
set.seed(2018)
boot_fb = boot(FBdata$Time, statistic=meanValues, R=3000)
hist(boot_fb$t)
qqnorm(boot_fb$t, pch = 19, frame = FALSE)
qqline(boot_fb$t, col = "red", lwd = 3)
boot.ci(boot_fb,conf=0.95, type="perc")
boot.ci(boot_fb,conf=0.95, type="bca")
library(perm)
install.packages("perm")
library(perm)
permTS(Bumpus$Humerus~Bumpus$Status)
DRP=read.csv("DRPData.csv")
permTS(Bumpus$Humerus~Bumpus$Status)
DRP=read.csv("DRPData.csv")
permTS(DRP$drp~DRP$group)
DRP=read.csv("DRPData.csv")
permTS(DRP$drp~DRP$group, alternative="less")
DRP=read.csv("DRPData.csv")
permTS(DRP$drp~DRP$group, alternative="less",method="exact.mc")
View(DRP)
View(DRP)
DRP=read.csv("DRPData.csv")
control=DRP$drp[DRP.group=="Control"]
DRP=read.csv("DRPData.csv")
control=DRP$drp[DRP$group=="Control"]
treatment=DRP$drp[DRP$group=="Treat"]
#permTS(DRP$drp~DRP$group, alternative="less",method="exact.mc")
permTS(treatment, control, alternative="greater",method="exact.mc")
DRP=read.csv("DRPData.csv")
control=DRP$drp[DRP$group=="Control"]
treatment=DRP$drp[DRP$group=="Treat"]
#permTS(DRP$drp~DRP$group, alternative="less",method="exact.mc")
permTS(treatment, control, alternative="greater",method="exact.mc", nmc=1000)
DRP=read.csv("DRPData.csv")
control=DRP$drp[DRP$group=="Control"]
treatment=DRP$drp[DRP$group=="Treat"]
#permTS(DRP$drp~DRP$group, alternative="less",method="exact.mc")
permTS(treatment, control, alternative="greater",method="exact.mc")
DRP=read.csv("DRPData.csv")
control=DRP$drp[DRP$group=="Control"]
treatment=DRP$drp[DRP$group=="Treat"]
#permTS(DRP$drp~DRP$group, alternative="less",method="exact.mc")
permTS(treatment, control, alternative="greater",method="exact.mc", nmc=5000)
DRP=read.csv("DRPData.csv")
control=DRP$drp[DRP$group=="Control"]
treatment=DRP$drp[DRP$group=="Treat"]
#permTS(DRP$drp~DRP$group, alternative="less",method="exact.mc")
permTS(treatment, control, alternative="greater", nmc=5000)
DRP=read.csv("DRPData.csv")
control=DRP$drp[DRP$group=="Control"]
treatment=DRP$drp[DRP$group=="Treat"]
#permTS(DRP$drp~DRP$group, alternative="less",method="exact.mc")
permTS(treatment, control, alternative="greater", nmc=5000,method="exact.mc")
N=3000
FBdata=read.csv("FacebookData.csv")
mean_y=c()
for (i in 1:N){
y=sample(FBdata$Time, size=21, replace = TRUE)
mean_y[i]=mean(y)
}
hist(mean_y)
qqnorm(mean_y, pch = 19, frame = FALSE)
qqline(mean_y, col = "red", lwd = 3)
allData=[control treatment]
allData=c(control ,treatment)
allData=c(control ,treatment)
n1=length(treatment)
n2=length(control)
allData=c(control ,treatment)
n1=length(treatment)
n2=length(control)
N=5000
diff=c()
for (i in 1:N) {
x=sample(allData, n1+n2,replace=F)
treatment_resample=x[1:n1]
control_resample=x[n1+1:n2]
diff[i]=mean(treatment_resample)-mean(control_resample)
}
diff[i]=mean(treatment_resample)-mean(control_resample)
allData=c(control ,treatment)
n1=length(treatment)
n2=length(control)
N=5000
diff=c()
for (i in 1:N) {
x=sample(allData, n1+n2,replace=F)
treatment_resample=x[1:n1]
control_resample=x[n1+1:n2]
diff[i]=mean(treatment_resample)-mean(control_resample)
}
hist(diff)
allData=c(control ,treatment)
n1=length(treatment)
n2=length(control)
diff=mean(treatment)-mean(control)
N=5000
diff_resample=c()
for (i in 1:N) {
x=sample(allData, n1+n2,replace=F)
treatment_resample=x[1:n1]
control_resample=x[n1+1:n2]
diff_resample[i]=mean(treatment_resample)-mean(control_resample)
}
hist(diff_resample)
allData=c(control ,treatment)
n1=length(treatment)
n2=length(control)
diff=mean(treatment)-mean(control)
N=5000
diff_resample=c()
for (i in 1:N) {
x=sample(allData, n1+n2,replace=F)
treatment_resample=x[1:n1]
control_resample=x[n1+1:n2]
diff_resample[i]=mean(treatment_resample)-mean(control_resample)
}
hist(diff_resample)
index_bigger=which(diff_resample>diff)
index_bigger
length(index_bigger)
diff_resample[index_bigger]
p=length(index_bigger)/N
allData=c(control ,treatment)
n1=length(treatment)
n2=length(control)
diff=mean(treatment)-mean(control)
N=5000
diff_resample=c()
for (i in 1:N) {
x=sample(allData, n1+n2,replace=F)
treatment_resample=x[1:n1]
control_resample=x[n1+1:n2]
diff_resample[i]=mean(treatment_resample)-mean(control_resample)
}
hist(diff_resample)
index_bigger=which(diff_resample>=diff)
p=length(index_bigger)/N
p
index_bigger=which(diff_resample>=diff)
index_bigger
allData=c(control ,treatment)
n1=length(treatment)
n2=length(control)
diff=mean(treatment)-mean(control)
N=5000
diff_resample=c()
for (i in 1:N) {
x=sample(allData, n1+n2,replace=F)
treatment_resample=x[1:n1]
control_resample=x[n1+1:n2]
diff_resample[i]=mean(treatment_resample)-mean(control_resample)
}
hist(diff_resample)
index_bigger=which(diff_resample>=diff)
p=length(index_bigger)/N
DRP=read.csv("DRPData.csv")
control=DRP$drp[DRP$group=="Control"]
treatment=DRP$drp[DRP$group=="Treat"]
#permTS(DRP$drp~DRP$group, alternative="less",method="exact.mc")
permTS(treatment, control, alternative="greater",method="exact.mc",control=permControl(nmc=5000)$p.value)
DRP=read.csv("DRPData.csv")
control=DRP$drp[DRP$group=="Control"]
treatment=DRP$drp[DRP$group=="Treat"]
#permTS(DRP$drp~DRP$group, alternative="less",method="exact.mc")
permTS(treatment, control, alternative="greater",method="exact.mc",
control=permControl(nmc=5000)$p.value)
DRP=read.csv("DRPData.csv")
control=DRP$drp[DRP$group=="Control"]
treatment=DRP$drp[DRP$group=="Treat"]
#permTS(DRP$drp~DRP$group, alternative="less",method="exact.mc")
permTS(treatment, control, alternative="greater",method="exact.mc",
control=permControl(nmc=5000)$p.value
DRP=read.csv("DRPData.csv")
control=DRP$drp[DRP$group=="Control"]
treatment=DRP$drp[DRP$group=="Treat"]
#permTS(DRP$drp~DRP$group, alternative="less",method="exact.mc")
permTS(treatment, control, alternative="greater",method="exact.mc",
control=permControl(nmc=5000))$p.value
DRP=read.csv("DRPData.csv")
control=DRP$drp[DRP$group=="Control"]
treatment=DRP$drp[DRP$group=="Treat"]
#permTS(DRP$drp~DRP$group, alternative="less",method="exact.mc")
permTS(treatment, control, alternative="greater",method="exact.mc",
control=permControl(nmc=5000))
set.seed(1)
DRP=read.csv("DRPData.csv")
control=DRP$drp[DRP$group=="Control"]
treatment=DRP$drp[DRP$group=="Treat"]
#permTS(DRP$drp~DRP$group, alternative="less",method="exact.mc")
permTS(treatment, control, alternative="greater",method="exact.mc",
control=permControl(nmc=5000))
set.seed(1)
DRP=read.csv("DRPData.csv")
control=DRP$drp[DRP$group=="Control"]
treatment=DRP$drp[DRP$group=="Treat"]
#permTS(DRP$drp~DRP$group, alternative="less",method="exact.mc")
permTS(treatment, control, alternative="greater",method="exact.mc",
control=permControl(nmc=5000))
set.seed(2018)
allData=c(control ,treatment)
n1=length(treatment)
n2=length(control)
diff=mean(treatment)-mean(control)
N=5000
diff_resample=c()
for (i in 1:N) {
x=sample(allData, n1+n2,replace=F)
treatment_resample=x[1:n1]
control_resample=x[n1+1:n2]
diff_resample[i]=mean(treatment_resample)-mean(control_resample)
}
hist(diff_resample)
index_bigger=which(diff_resample>=diff)
p=length(index_bigger)/N
p
set.seed(2018)
allData=c(control ,treatment)
n1=length(treatment)
n2=length(control)
diff=mean(treatment)-mean(control)
N=5000
diff_resample=c()
for (i in 1:N) {
x=sample(allData, n1+n2,replace=F)
treatment_resample=x[1:n1]
control_resample=x[n1+1:n2]
diff_resample[i]=mean(treatment_resample)-mean(control_resample)
}
hist(diff_resample)
index_bigger=which(diff_resample>=diff)
p=length(index_bigger)/N
p
index_bigger
set.seed(2018)
allData=c(control ,treatment)
n1=length(treatment)
n2=length(control)
diff=mean(treatment)-mean(control)
N=5000
diff_resample=c()
for (i in 1:N) {
x=sample(allData, n1+n2,replace=F)
treatment_resample=x[1:n1]
control_resample=x[n1+1:n2]
diff_resample[i]=mean(treatment_resample)-mean(control_resample)
}
hist(diff_resample)
index_bigger=which(diff_resample>=diff)
p=length(index_bigger)/N
index_bigger
set.seed(1)
allData=c(control ,treatment)
n1=length(treatment)
n2=length(control)
diff=mean(treatment)-mean(control)
N=5000
diff_resample=c()
for (i in 1:N) {
x=sample(allData, n1+n2,replace=F)
treatment_resample=x[1:n1]
control_resample=x[n1+1:n2]
diff_resample[i]=mean(treatment_resample)-mean(control_resample)
}
hist(diff_resample)
index_bigger=which(diff_resample>=diff)
p=length(index_bigger)/N
p
diff
#set.seed(1)
allData=c(control ,treatment)
n1=length(treatment)
n2=length(control)
diff=mean(treatment)-mean(control)
N=5000
diff_resample=c()
for (i in 1:N) {
x=sample(allData, n1+n2,replace=F)
treatment_resample=x[1:n1]
control_resample=x[n1+1:n2]
diff_resample[i]=mean(treatment_resample)-mean(control_resample)
}
hist(diff_resample)
index_bigger=which(diff_resample>=diff)
p=length(index_bigger)/N
p
set.seed(1)
allData=c(control ,treatment)
n1=length(treatment)
n2=length(control)
diff=mean(treatment)-mean(control)
N=5000
diff_resample=c()
for (i in 1:N) {
x=sample(allData, n1+n2,replace=F)
treatment_resample=x[1:n1]
control_resample=x[n1+1:n2]
diff_resample[i]=mean(treatment_resample)-mean(control_resample)
}
hist(diff_resample)
index_bigger=which(diff_resample>=diff)
p=length(index_bigger)/N
p
q()
